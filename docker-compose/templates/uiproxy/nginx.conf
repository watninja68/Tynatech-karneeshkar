user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    server {

      listen 8080 default;
      client_max_body_size 10m;

      location / {
        root /usr/share/nginx/dist;
        try_files $uri $uri/ /index.html;
      }

      include /etc/nginx/nginx_edge_template.conf;

      location ~ ^/api/edgeservice/proxy/([^/]+)/ws/ekuiper/test/ {
        proxy_pass http://main:8082;
        proxy_set_header Upgrade "websocket";
        proxy_set_header Connection "Upgrade";
      }

      location ~ ^/api/edgeservice/proxy/([^/]+)/api/stream/log$ {
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_cache off;
        proxy_buffering off;
        chunked_transfer_encoding on;
        proxy_set_header Host $http_host;
        proxy_pass http://main:8082;
        add_header X-Accel-Buffering "no";
      }  

      location /api/ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $http_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_pass http://main:8082;
        proxy_buffering on;
        proxy_buffer_size 32k;
        proxy_busy_buffers_size 256k;
        proxy_buffers 256 4k;
      }

      location /dl/emqx/agents/ {
        proxy_pass http://emqxagentdlproxy:8083/;
      }

      location /metric/ {
        proxy_pass http://pushgateway:9091/;
      }
    }
}

stream {
    server {
      listen 8080 udp reuseport;
      proxy_timeout 20s;
      proxy_pass telegraf:10514;
    }
}

